# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from federatedscope.core.proto import gRPC_comm_manager_pb2 as gRPC__comm__manager__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class gRPCComServeFuncStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.sendMessage = channel.unary_unary(
                '/fscomm.gRPCComServeFunc/sendMessage',
                request_serializer=gRPC__comm__manager__pb2.MessageRequest.SerializeToString,
                response_deserializer=gRPC__comm__manager__pb2.MessageResponse.FromString,
                )
        self.uploadMnnModel = channel.unary_unary(
                '/fscomm.gRPCComServeFunc/uploadMnnModel',
                request_serializer=gRPC__comm__manager__pb2.FileRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.sendMnnModel4Train = channel.unary_unary(
                '/fscomm.gRPCComServeFunc/sendMnnModel4Train',
                request_serializer=gRPC__comm__manager__pb2.FileRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.sendMnnModel4Test = channel.unary_unary(
                '/fscomm.gRPCComServeFunc/sendMnnModel4Test',
                request_serializer=gRPC__comm__manager__pb2.FileRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class gRPCComServeFuncServicer(object):
    """Missing associated documentation comment in .proto file."""

    def sendMessage(self, request, context):
        """both server and client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uploadMnnModel(self, request, context):
        """client upload model for aggregation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMnnModel4Train(self, request, context):
        """server broadcast model for training
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMnnModel4Test(self, request, context):
        """server broadcast model for test
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_gRPCComServeFuncServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=gRPC__comm__manager__pb2.MessageRequest.FromString,
                    response_serializer=gRPC__comm__manager__pb2.MessageResponse.SerializeToString,
            ),
            'uploadMnnModel': grpc.unary_unary_rpc_method_handler(
                    servicer.uploadMnnModel,
                    request_deserializer=gRPC__comm__manager__pb2.FileRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'sendMnnModel4Train': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMnnModel4Train,
                    request_deserializer=gRPC__comm__manager__pb2.FileRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'sendMnnModel4Test': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMnnModel4Test,
                    request_deserializer=gRPC__comm__manager__pb2.FileRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fscomm.gRPCComServeFunc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class gRPCComServeFunc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fscomm.gRPCComServeFunc/sendMessage',
            gRPC__comm__manager__pb2.MessageRequest.SerializeToString,
            gRPC__comm__manager__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def uploadMnnModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fscomm.gRPCComServeFunc/uploadMnnModel',
            gRPC__comm__manager__pb2.FileRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMnnModel4Train(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fscomm.gRPCComServeFunc/sendMnnModel4Train',
            gRPC__comm__manager__pb2.FileRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMnnModel4Test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fscomm.gRPCComServeFunc/sendMnnModel4Test',
            gRPC__comm__manager__pb2.FileRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
